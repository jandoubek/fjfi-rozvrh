@using Rozvrh.Controllers
@using Rozvrh.Models
@using Rozvrh.Models.Timetable

@model Rozvrh.Models.Model

@{

    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RozvrhForExport</title>
    @Styles.Render("~/Content/css")
</head>
<body>
    <div id="TimetableExport">
        <div class="content">
            <div id="backgroundTable">
                <div class="header">
                    <div></div>
                    <div>7:30</div>
                    <div>8:30</div>
                    <div>9:30</div>
                    <div>10:30</div>
                    <div>11:30</div>
                    <div>12:30</div>
                    <div>13:30</div>
                    <div>14:30</div>
                    <div>15:30</div>
                    <div>16:30</div>
                    <div>17:30</div>
                    <div>18:30</div>
                    <div>19:30</div>
                </div>
                @for (int i = 0; i < 13; i++)
                {
                    <div class="vertical" style="left:@(51 + i * 50)px"></div>
                }
                <div class="begining"></div>

                @{
    int top = 39;

    foreach (var day in Model.Days)
    {
        int dayHeight = 50;
        var dayGroups = HomeController.getGroups(Model.CustomTimetableFields.Where(m => m.day == day.name).ToList());

        //compute day height
        foreach (var group in dayGroups)
        {
            if (group.Count >= 2)
            {
                if (group.Count * 25 > dayHeight)
                {
                    dayHeight = group.Count * 25;
                }
            }
        }

        <div id="@day.id" class="horizontal" style="height: @(dayHeight - 1)px; line-height: @(dayHeight - 1)px">
            @day.name
            @foreach (var group in dayGroups)
            {
                foreach (var field in group)
                {
                    if (field is FakeTimetableField)
                    {
                        continue;
                    }
                    int width = Convert.ToInt32(field.duration) * 50;
                    int left = Convert.ToInt32(75 + (Convert.ToDecimal(field.time_hours) - 7 + Convert.ToDecimal(field.time_minutes) / 60) * 50);
                    int height = 50;
                    int nameHeight = 31;
                    int fieldTop = top;
                    string color = int.Parse(field.color).ToString("X6");
                    if (group.Count >= 2)
                    {
                        height = 25;
                        nameHeight = 10;
                        fieldTop = top + group.IndexOf(field) * 25;
                    }
                    <div class="background" style="width:@(width - 4)px; height:@(nameHeight)px; background:#@color; left:@(left + 2)px; top:@(fieldTop + 2)px;"></div>
                    <div class="name @(height < 50 ? "small" : "")" style="width:@(width - 4)px; height:@(nameHeight)px; left:@(left + 2)px;top:@(fieldTop + 2)px;">
                        <div style="color:@(field.period.ToLower() == "ne" ? "red" : "#000")">@field.lecture_acr</div>
                    </div>
                    <div class="detailsBackground" style="width:@(width - 4)px; height:@(height - nameHeight - 4)px; left:@(left + 2)px;top:@(fieldTop + 2 + nameHeight)px;"></div>
                    <div class="details@(height < 50 ? "Small" : "")" style="width:@(width - 6)px; height:@(height - nameHeight - 6)px; left:@(left + 2)px;top:@(fieldTop + 2 + nameHeight)px;">
                        @field.lecturer
                        <div>@field.classroom</div>
                    </div>
                    <div class="border" style="width:@(width - 4)px; height:@(height - 4)px; position:absolute; left:@(left)px; top:@(fieldTop)px;border-color:#@color;">
                    </div>
                }
            }
            @{ top += dayHeight; }

        </div>

    }
}
            </div>
        </div>

    </div>
</body>
</html>
